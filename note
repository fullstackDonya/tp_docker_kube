
Voici un récapitulatif clair des étapes d'installation, de déploiement, de vérification et des services associés :
Récapitulatif des services
Type	Service	Technologie	Description	Port
Frontend	Client	React	Interface utilisateur	3000
Backend	Posts	Node.js	Gestion des posts	4000
Backend	Comments	Node.js	Gestion des commentaires	4001
Backend	Query	Node.js	Gestion des requêtes agrégées	4002
Backend	Moderation	Node.js	Modération des commentaires	4003
Backend	Event Bus	Node.js	Gestion des événements entre les microservices	4005


cd microservices

Installer les dépendances pour chaque service :
cd client && npm install
cd ../posts && npm install
cd ../comments && npm install
cd ../query && npm install
cd ../moderation && npm install
cd ../event-bus && npm install

Créer les fichiers d'authentification :
mkdir auth
htpasswd -Bc ./auth/htpasswd admin
htpasswd -Bc ./auth/htpasswd admin2

kubectl create secret docker-registry regcred \
  --docker-server=localhost:5005 \
  --docker-username=admin \
  --docker-password='password*/' \
  --docker-email=d.benferroudj@ecole-ipssi.net



Déploiement avec Docker
Construire les images Docker pour chaque service :
docker build -t micro_service/client ./client
docker build -t micro_service/posts ./posts
docker build -t micro_service/comments ./comments
docker build -t micro_service/query ./query
docker build -t micro_service/moderation ./moderation
docker build -t micro_service/event-bus ./event-bus

ou en utilisant le registre local :
docker build -t localhost:5005/micro_service/client ./client
docker build -t localhost:5005/micro_service/posts ./posts
docker build -t localhost:5005/micro_service/comments ./comments
docker build -t localhost:5005/micro_service/query ./query
docker build -t localhost:5005/micro_service/moderation ./moderation
docker build -t localhost:5005/micro_service/event-bus ./event-bus

Authentification Docker :
docker login
docker login localhost:5005

Taguer les images pour le registre local :
docker tag micro_service/client localhost:5005/micro_service/client
docker tag micro_service/posts localhost:5005/micro_service/posts
docker tag micro_service/comments localhost:5005/micro_service/comments
docker tag micro_service/query localhost:5005/micro_service/query
docker tag micro_service/moderation localhost:5005/micro_service/moderation
docker tag micro_service/event-bus localhost:5005/micro_service/event-bus


Démarrer les services avec Docker Compose :
docker-compose up -d
docker-compose up --build -d

Pousser les images vers le registre local :
docker build -t micro_service/client ./client
docker build -t micro_service/posts ./posts
docker build -t micro_service/comments ./comments
docker build -t micro_service/query ./query
docker build -t micro_service/moderation ./moderation
docker build -t micro_service/event-bus ./event-bus

Démarrer un registre Docker local :
docker run -d -p 5001:5000 --name registry registry:2

Vérifier l'état des services :
docker-compose logs client
docker-compose logs posts
docker-compose logs comments
docker-compose logs query
docker-compose logs moderation
docker-compose logs event-bus


Appliquer les fichiers de configuration Kubernetes :
kubectl apply -f k8s/
kubectl apply -f k8s/client-srv-service.yml
kubectl apply -f k8s/comments-srv-deployment.yaml
kubectl apply -f k8s/comments-srv-service.yaml
kubectl apply -f k8s/event-bus-srv-deployment.yaml
kubectl apply -f k8s/event-bus-srv-service.yaml
kubectl apply -f k8s/ingress.yaml
kubectl apply -f k8s/moderation-srv-deployment.yaml
kubectl apply -f k8s/moderation-srv-service.yaml
kubectl apply -f k8s/posts-clusterip-srv-deployment.yaml
kubectl apply -f k8s/posts-clusterip-srv-service.yaml
kubectl apply -f k8s/query-srv-deployment.yaml
kubectl apply -f k8s/query-srv-service.yaml


Vérifier l'état des services :
kubectl get nodes
kubectl get pods
kubectl get svc



URL des services accessibles :
Client : http://localhost:3000
Comments : http://localhost:4001
Event Bus : http://localhost:4005
Moderation : http://localhost:4003
Posts : http://localhost:4000
Query : http://localhost:4002
Registry : http://localhost:5005

Accéder à l'application front-end :
Accéder à http://localhost:3000 pour voir l'interface utilisateur.

Vérifier les autres services via leur API :
http://localhost/posts/create
http://localhost/posts
http://localhost/posts/<id>/comments
http://localhost

Posts Service : http://localhost:4000
Comments Service : http://localhost:4001
Query Service : http://localhost:4002
Moderation Service : http://localhost:4003
Event Bus Service : http://localhost:4005

Accéder à l'application front-end (Kubernetes)
Si  déployé sur Kubernetes,application front-end via l'URL suivante :
http://192.168.49.2:31637
Ou pour les services spécifiques :
http://192.168.49.2:31637/posts


supprimer un container:
docker stop <container_id>

# kubectl delete pod client-srv-c586d6fd7-jq9px

# kubectl describe pod moderation-srv-bb6c96478-99gvv
